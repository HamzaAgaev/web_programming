
package servlets.filters;

import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.FilterChain;
import java.io.File;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.ServletContext;
import javax.servlet.RequestDispatcher;

@WebFilter(filterName = "URLFilter")
public class URLFilter extends HttpFilter {
    @Override
    public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain)
            throws IOException, ServletException {
        String requestedURI = request.getRequestURI();
        ServletContext servletContext = getServletContext();
        String currPath = servletContext.getContextPath();
        String realPath = servletContext.getRealPath(requestedURI);
        File requestedFile = new File(realPath);
        System.out.println(requestedURI);
        System.out.println(currPath);
        if (!requestedURI.equals("/lab_2/")) {
            if ((requestedURI.endsWith(".css") || requestedURI.endsWith(".js")
                    || requestedURI.endsWith(".jsp")) && requestedFile.exists()) {
                System.out.println("EXISTS!");
                chain.doFilter(request, response);
//                return;
            } else {
                System.out.println("ERROR!");
                if (!requestedFile.exists()) {
                    response.setStatus(HttpServletResponse.SC_NOT_FOUND);
                    System.out.println("NOT EXISTS!");
                } else {
                    response.setStatus(HttpServletResponse.SC_FORBIDDEN);
                    System.out.println("PERMISSION DENIED!");
                }
//                RequestDispatcher requestDispatcher = request.getRequestDispatcher(currPath + "/static/error.jsp");
//                requestDispatcher.forward(request, response);
                response.sendRedirect("static/error.jsp");
//                return;

            }
        } else {
            System.out.println("BRO IS MAIN");
            chain.doFilter(request, response);
//            return;
        }
//        chain.doFilter(request, response);
    }
}
